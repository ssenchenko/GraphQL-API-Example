Transform: AWS::Serverless-2016-10-31

Resources:
# ============== Non AppSync resources ==============
  DynamoDBNotesTable:
    Type: "AWS::DynamoDB::Table"
    Description: "Data store for AWS AppSync Notes Type"
    Properties:
      TableName: !Sub ${APIName}-notes-table
      AttributeDefinitions:
        - AttributeName: "NoteId"
          AttributeType: "S"
        - AttributeName: "UserId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "UserId"
          KeyType: "HASH"
        - AttributeName: "NoteId"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

# ================== Graph QL resources ============================
  SamGraphQl:
    Type: "AWS::Serverless::GraphQLApi"
    Properties:
      Name: MyNotes
      SchemaUri: "s3://graph-ql-demo/schema-v1.graphql"
      MappingConfig:
        PathToCode: "s3://graph-ql-demo/"
        Runtime:
          Name: APPSYNC_JS
          RuntimeVersion: "1.0.0"
      Auth:
        Type: AWS_IAM

  Notes:
    Type: "AWS::Serverless::GqlDataSource"
    Properties:
      Api: SamGraphQl
      Name: !Sub NotesDataSource
      Type: AMAZON_DYNAMODB
      # maps to DynamoDbConfig + permissions to access
      DynamoDBConfig: 
        AwsRegion: !Sub ${AWS::Region}
        TableName: !Ref DynamoDBNotesTable

  AllMyNotes:
    Type:  "AWS::Serverless::GqlVtlResolver"
    Properties:
      Api: SamGraphQl
      DataSource: Notes
      TypeName: Query
      FieldName: allMyNotes

  GetNote:
    Type: "AWS::Serverless::GqlVtlResolver"
    Properties:
      Api: SamGraphQl
      DataSource: Notes
      TypeName: Query
      FieldName: getNote
      MappingTemplate:
        RequestInline: |
          {
            "version": "2017-02-28",
            "operation": "GetItem",
            "key": {
              "NoteId": $util.dynamodb.toDynamoDBJson($context.arguments.NoteId),
              "UserId": $util.dynamodb.toDynamoDBJson($context.identity.userArn)
            }
          }
        ResponseInline: "$util.toJson($context.result)"

  SaveNote:
    Type: "AWS::Serverless::GqlVtlResolver"
    Properties:
      Api: SamGraphQl
      DataSource: Notes
      TypeName: Mutation
      FieldName: saveNote
      MappingTemplate:
        RequestInline: |
          {
            "version": "2017-02-28",
            "operation": "PutItem",
            "key": {
              "NoteId": $util.dynamodb.toDynamoDBJson($context.arguments.NoteId),
              "UserId": $util.dynamodb.toDynamoDBJson($context.identity.userArn)
            },
            "attributeValues": {
              "title": $util.dynamodb.toDynamoDBJson($context.arguments.title),
              "content": $util.dynamodb.toDynamoDBJson($context.arguments.content)
            }
          }
        ResponseInline: "$util.toJson($context.result)"

  DeleteNoteFn:
    Type: "AWS::Serverless::GqlFunction"
    Properties:
      Api: SamGraphQl
      DataSource: Notes
      Name: DeleteNote

  NotifyOnDeleteFn:
    Type: "AWS::Serverless::GqlFunction"
    Properties:
      Api: SamGraphQl
      DataSource: Notes
      Name: NotifyOnDelete

  DeleteNote:
    Type: "AWS::Serverless::GqlResolver"
    Properties:
      Api: SamGraphQl
      TypeName: Mutation
      FieldName: deleteNote
      Functions:
        - !GetAtt DeleteNoteFn.FunctionId
        - !GetAtt NotifyOnDeleteFn.FunctionId
